package serveur;

import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.BufferedReader;
import java.io.IOException;
import java.net.Socket;
import java.net.SocketException;

/**

 */
public class WorkerRunnable implements Runnable {
	public static int itemCount = 1;
	protected Socket clientSocket = null;
	protected String serverText = null;
	protected int numClient;

	public WorkerRunnable(Socket clientSocket, String serverText) {
		this.clientSocket = clientSocket;
		this.serverText = serverText;
		this.numClient = WorkerRunnable.itemCount;
		WorkerRunnable.itemCount++;
	}

	public void run() {
		InputStream input = null;
		try {
			String inputLine;
			input = clientSocket.getInputStream();
			BufferedReader in = new BufferedReader(new InputStreamReader(input));
			while (null != (inputLine = in.readLine())) {
				if (!inputLine.equals(""))
					System.out.println("Client n°" + this.numClient + " : " + inputLine);
			}
			
			System.out.println("Client n°" + this.numClient + " : Connexion finie");
		} catch (IOException e) {
			System.out.println("Connection forcibly closed!");
		} finally {
			OutputStream output;
			try {
				output = clientSocket.getOutputStream();
				output.close();
				input.close();
			} catch (IOException e) {
			}
		}
	}
}